Exercise 1.
SELECT Country.Continent, FLOOR(AVG(City.Population)) FROM Country, City 
WHERE Country.Code = City.CountryCode 
GROUP BY Country.Continent;
----
Exercise 2.
with activation_rate as (SELECT ROUND(SUM(CASE WHEN t.signup_action = 'Confirmed' THEN 1 ELSE 0 END)*1.0 / COUNT(t.signup_action),2) as confirm_rate FROM emails e
left join texts t
on e.email_id = t.email_id and e.email_id is not null)
select * from activation_rate;
------
Excerise 3

WITH total_spents AS (SELECT age.age_bucket,
SUM(CASE WHEN act.activity_type = 'send' THEN time_spent end) as sending_time,
SUM(CASE WHEN act.activity_type = 'open' THEN time_spent end) as opening_time
FROM activities act JOIN age_breakdown age on act.user_id = age.user_id GROUP BY age.age_bucket)
SELECT age_bucket,
ROUND(CAST(sending_time/(sending_time + opening_time) :: FLOAT * 100.00 as numeric), 2) as send_perc,
ROUND(CAST (opening_time/(sending_time + opening_time) :: FLOAT * 100.00 as numeric), 2) as open_perc
FROM total_spents 
----
Excercise 4
SELECT customer_id
FROM customer_contracts c 
LEFT JOIN products p   
ON c.product_id  = p.product_id
GROUP BY customer_id 
having COUNT(DISTINCT product_category) >= (SELECT COUNT(DISTINCT product_category) FROM products);

Exercise 6

SELECT product_name, SUM(unit) AS unit FROM Orders o
JOIN Products p ON p.product_id=o.product_id AND EXTRACT(YEAR_MONTH FROM order_date)=202002
GROUP BY product_name
HAVING unit >= 100;
-------

Excercise 7

SELECT page_id FROM pages WHERE NOT EXISTS (
SELECT page_id FROM page_likes AS likes  WHERE likes.page_id = pages.page_id);
